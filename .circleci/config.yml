version: 2.1

executors:
    node/default:
        environment:
            PRIVATE_KEY: |
                b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAACFwAAAAdzc2gtcn
                NhAAAAAwEAAQAAAgEAwGS1GsuIbd7JTjtEPqVByCiP2VfgB+no9SkaV91S7Yw33O0PQRw/
                ZSmp6ldbqY3TU/MzIGyT61TJ1kHNwOXLw5+6cutIUx8kq4rwxmvtLrhH6fmaJoeqiZjm4D
                jLJswNPeqlD1XpmiysPNy5A0Z5e1CZq4Mp8c4VhK9yvm+2HO227ekFgSt1WxBrWC6PflQC
                3oJCRDHA1gAgklk4usyTMZaiflMLq53t6S6SKn6Inh8y0rWbEpv2gcZ03ehe4p0aIkUK0q
                IauTgGefkMu3nvZgURLc64WzaAf/7P7QVlZRY2pjQ8l8xffX70EfhtYhMlOXLR3i/AfdBv
                icerTVhwDwr6zA4zPixwbl6omznzCGnOyPk/okGVzZvn4xOGT+sbcQZOs2rm7bSsVPKxWI
                yT2IQnT0JxUNRVwvTpYd4nAgkZ22v7MD1CC+T9GI9L4ZXv3bGBy8Y3zqxJ1tDqM8ca+pYI
                8JUq6hIhJI2cnOpScpsjZeKOYTnyIOU3FJxou2WD5S86ExMZYVtfwnpbhmD86L2cOaNLoK
                E0QxvW/8CFDHskaLURIIiU/PyPA8zuvD165/bgVW01IhoGkITZenyzI5HvhbZAaZLz9HMr
                dnSD36WIx/XUO6zAiMkRexUAnbMrrDeM/iwj3DUihydpxClGTSrnK4Fb5+3WZER/DEVzV6
                sAAAdQGBcyrBgXMqwAAAAHc3NoLXJzYQAAAgEAwGS1GsuIbd7JTjtEPqVByCiP2VfgB+no
                9SkaV91S7Yw33O0PQRw/ZSmp6ldbqY3TU/MzIGyT61TJ1kHNwOXLw5+6cutIUx8kq4rwxm
                vtLrhH6fmaJoeqiZjm4DjLJswNPeqlD1XpmiysPNy5A0Z5e1CZq4Mp8c4VhK9yvm+2HO22
                7ekFgSt1WxBrWC6PflQC3oJCRDHA1gAgklk4usyTMZaiflMLq53t6S6SKn6Inh8y0rWbEp
                v2gcZ03ehe4p0aIkUK0qIauTgGefkMu3nvZgURLc64WzaAf/7P7QVlZRY2pjQ8l8xffX70
                EfhtYhMlOXLR3i/AfdBvicerTVhwDwr6zA4zPixwbl6omznzCGnOyPk/okGVzZvn4xOGT+
                sbcQZOs2rm7bSsVPKxWIyT2IQnT0JxUNRVwvTpYd4nAgkZ22v7MD1CC+T9GI9L4ZXv3bGB
                y8Y3zqxJ1tDqM8ca+pYI8JUq6hIhJI2cnOpScpsjZeKOYTnyIOU3FJxou2WD5S86ExMZYV
                tfwnpbhmD86L2cOaNLoKE0QxvW/8CFDHskaLURIIiU/PyPA8zuvD165/bgVW01IhoGkITZ
                enyzI5HvhbZAaZLz9HMrdnSD36WIx/XUO6zAiMkRexUAnbMrrDeM/iwj3DUihydpxClGTS
                rnK4Fb5+3WZER/DEVzV6sAAAADAQABAAACAQCD3oMjso34gNOKA6VrKupDv0mZt1mfEvzR
                zTJ5NwI4P/uqOfJStoHdXQlRzj7NoKBQ0kkg2Esq6hrN+JyGsvtPQpQRYKNaFeaUjc8qsZ
                8IftcL0EGQVzzUwzC8TzEvjn0lC0fHkyNiwWvs630EebGajExH+sctLgwhvf/v97HjciwI
                NcfIGXl+yWpKLt+7vumYib/R7ig2hi/NH8p6fu4E9zK5U0KUhtMjGQCmj8QkXU4AjumTf8
                MegGBqGXOv7+6RvrEEXofinDwULlhDx/gG/UIhG6fRHTJGiOkLlL9C4k7i7Lr7cOGiqvmv
                t4+BwY2qKsEegax2j/9jeLA5e3ySIouwk4LukCve74rL3KLD2g3rB+TpzraQup7ZMH6Umb
                ODY1YBiWbFnkrBPKuIHBR3uSCIzerZRscDczhoXGo8ewHGOLOdK+dy2VsIoKGyMvjrD2om
                Nn5P+JeOpXabze/HYssN1E4oA8BlkzjUVz/CgM9ZTWukJXwkMYOo30U+OrVZ3VCMREQSXH
                MnTxUhyxBxuO8ZnokFLvU8v3MZg6YjmQOg7R7E3t4w5+uEGWeSFu2tpeX4gEbvKw2MCwkV
                PezQeaJcAWuQnehL39mCefeu2UMfhWVDOFXzdhoMnWQgLDfwS5DX9ro3QVhC4DOLN4JMYJ
                NGWmR+Lz+Snu52cY6xwQAAAQEAsI9pQCwSKbtGquDCrxKO3ST1Q9QJFDhwrE8XyKxDexoX
                xvYKFPrOGiXJlFQhDun/5hI6EFS16zV3QNCMkEPoHFRuQkYiRdDf7N6d/d8DYlGxKVePfC
                4RAK8ecCpVkCHkuLnibprWF7ab8TtU8IAx78KBro0BTe4iFBFsE1oqveUva4ngqvgj3PNL
                qZCy2MLruNP+Hqpz95sgdw6l4uGbGBij4oybap6kK3aJ1TMsWEC59JEmZYp9zEKwal6UUL
                dVDX2Xz7RFiqCWgR4pOccZaU/V4hztaNDqKyCnYskks7xfiHYHEgDIJr/45ozNwbZQwQLM
                ylkDAI8BeSNzh4nl4gAAAQEA5kyvM2JY14Qk3h8hLUUU31AKQSUR8+VYeqodKgDcikLMdr
                9Guvhhg/9KZtq2+9kWVSqWtrAEcHi1A5bFI9qUEcgyWJnyqJshqAsiIdLk2i/rg0ISrLJU
                BNPXlMXwJObwB/gzfaYULwr2XgVPXBrlTK9It9vAQa2/OrLgv4QTNKKqjqtFT9HwvztG1B
                2HyQHncNX3GPbNF8Z48BOPK9SOr2glGc7iqNJjlf+Bd9Fh8q3ss3LLHBlHHxJ4UVFWZ37k
                o9qmigkXnEe8CcgeMwXtGkZP2wuhZo1b0FXGQPvjctayYU2NmyqP5YAdYH5xiQjCPiG5q8
                Aur2OGIVPjtbI4NwAAAQEA1d0ZtqQ0JJTYsAjALGtiTW/mCDWiv2TecOSqDyLZ9YWLfdzP
                8ds43UkmxWTlovxjuvQjd+bTSbzO4D/OzlgkQl+mdnybo9p8oUKO6ZtY/D60FQ1nHw7PvE
                DunFtVEcrgGA8YAZyn0/5IVc5tJoRdYsbxXwJn+SG4zlpKL7MFeQgjfyutaRiIivfrBK8O
                3nQGZftzkL6rjXkHpefcxzUfj8k/LgWME/3HdaBa9VmmtpT33oMF+Qco4s7xK8wpskHjEh
                VLqRhxUpTSSM34uG38S5oMGAVT8G8y68ybBrZ1rcCjjnqwfSyleBPSi5E2kcGZ3NyQ5V3x
                ZGTn5xJqtzU6LQAAABlhbGV4YW5kZXIubmduOTdAZ21haWwuY29t
    docker-publisher:
        environment:
            NPSERVER_IMAGE: ninjaprep/npserver
            NPCLIENT_IMAGE: ninjaprep/npclient
            NPBOX_IMAGE: ninjaprep/npbox
            BOX_IMAGE: ninjaprep/box

        docker:
            - image: circleci/buildpack-deps:stretch

orbs:
    node: circleci/node@3.0.1
    codecov: codecov/codecov@1.1.0

jobs:
    build-and-test:
        executor:
            name: node/default
        steps:
            - run:
                  name: Create private keys
                  command: |
                      mkdir -p ~/.ssh/ && touch ~/.ssh/id_rsa
                      echo -e "$PRIVATE_KEY" > ~/.ssh/id_rsa

            - checkout
            - node/install:
                  install-yarn: true
                  install-npm: false
                  node-version: latest
            - add_ssh_keys:
                  fingerprints:
                      - '58:6d:7c:d2:a8:44:62:7a:2d:cd:7f:ba:1c:ea:a1:fa'
            - restore_cache:
                  name: Restore Client Yarn Package Cache
                  keys:
                      - yarn-client-{{ checksum "client/yarn.lock" }}
            - restore_cache:
                  name: Restore Server Yarn Package Cache
                  keys:
                      - yarn-server-{{ checksum "server/yarn.lock" }}
            - run:
                  name: Add private question-db repo
                  command: yarn --cwd ./server add git+ssh://git@github.com/Ninja-Prep/question-database#main
            - run:
                  name: Adding NPM/Yarn dependencies
                  command: sudo chmod +x ./bin/InstallDependencies.sh && sudo ./bin/InstallDependencies.sh
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-client-{{ checksum "client/yarn.lock" }}
                  paths:
                      - ~/.cache/client-yarn
            - save_cache:
                  name: Save Server Yarn Package Cache
                  key: yarn-server-{{ checksum "server/yarn.lock" }}
                  paths:
                      - ~/.cache/server-yarn
            - run:
                  name: Testing Client Folder
                  command: cd client && yarn jest
            - run:
                  name: Client Build Attempt
                  command: CI=false yarn --cwd ./client run build
            - run:
                  name: Server Build Attempt
                  command: CI=false yarn --cwd ./server run build
            - run:
                  name: Install Doppler CLI to current directory
                  command: (curl -Ls https://cli.doppler.com/install.sh || wget -qO- https://cli.doppler.com/install.sh) | sh -s -- --no-install --no-package-manager
            - run:
                  name: Testing Server Folder
                  command: ./doppler run -- yarn --cwd ./server yarn test
            - codecov/upload:
                  file: ./client/coverage/coverage-final.json

    build-remote-docker-image:
        executor: docker-publisher
        steps:
            - checkout
            - setup_remote_docker:
                  version: 19.03.13
                  docker_layer_caching: true
            - run:
                  name: Build Nginx Client Image
                  command: |
                      docker build -t $NPCLIENT_IMAGE:latest -f ./client/Dockerfile.prod.client ./client
            - run:
                  name: Archive client Docker image
                  command: docker save -o client_image.tar $NPCLIENT_IMAGE
            - persist_to_workspace:
                  root: .
                  paths:
                      - ./client_image.tar
            - run:
                  name: Build Server Image
                  command: |
                      docker build -t $NPSERVER_IMAGE:latest -f ./server/Dockerfile.prod.server ./server
            - run:
                  name: Archive server Docker image
                  command: docker save -o server_image.tar $NPSERVER_IMAGE
            - persist_to_workspace:
                  root: .
                  paths:
                      - ./server_image.tar

    integration-tests:
        executor: docker-publisher
        steps:
            - checkout
            - setup_remote_docker:
                  version: 19.03.13
            - attach_workspace:
                  at: /tmp/workspace
            - run:
                  name: Load archived server Docker image
                  command: docker load -i /tmp/workspace/server_image.tar
            - run:
                  name: Pull npbox image
                  command: |
                      echo "$DOCKERHUB_ACCESS_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                      docker pull $NPBOX_IMAGE:latest
            - run:
                  name: Pull box image
                  command: |
                      echo "$DOCKERHUB_ACCESS_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                      docker pull $BOX_IMAGE:latest
            - run:
                  name: Run server integration tests
                  command: docker-compose -f circleci-compose.yml up --scale box=0 --exit-code-from npserver

    publish-latest:
        executor: docker-publisher
        steps:
            - setup_remote_docker:
                  version: 19.03.13
                  docker_layer_caching: true
            - attach_workspace:
                  at: /tmp/workspace
            - run:
                  name: Load archived client Docker image
                  command: docker load -i /tmp/workspace/client_image.tar
            - run:
                  name: Publish Docker Image to Docker Hub
                  command: |
                      echo "$DOCKERHUB_ACCESS_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                      docker push $NPCLIENT_IMAGE:latest
            - run:
                  name: Load archived server Docker image
                  command: docker load -i /tmp/workspace/server_image.tar
            - run:
                  name: Publish Docker Image to Docker Hub
                  command: |
                      echo "$DOCKERHUB_ACCESS_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                      docker push $NPSERVER_IMAGE:latest

    deploy-prod:
        executor:
            name: node/default
        steps:
            - checkout
            - run:
                  name: Deploy to Production
                  command: ssh -o StrictHostKeyChecking=no -v $DROPLET_USER@$DROPLET_IP -p $SSH_PORT "./deploy_project.sh"

workflows:
    build-and-test:
        jobs:
            - build-and-test
            - build-remote-docker-image:
                  filters:
                      branches:
                          only:
                              - master
                  requires:
                      - build-and-test
            - integration-tests:
                  filters:
                      branches:
                          only:
                              - master
                  requires:
                      - build-remote-docker-image
            - publish-latest:
                  filters:
                      branches:
                          only:
                              - master
                  requires:
                      - integration-tests
            - deploy-prod:
                  filters:
                      branches:
                          only:
                              - master
                  requires:
                      - publish-latest
