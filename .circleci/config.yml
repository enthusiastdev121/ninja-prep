version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: alexngn/ninjaprep
    docker:
      - image: circleci/buildpack-deps:stretch
orbs:
  node: circleci/node@3.0.1
  codecov: codecov/codecov@1.1.0

jobs:
  build-and-test:
    executor:
      name: node/default
    steps:
      - checkout
      - node/install:
          install-yarn: true
          install-npm: false
          node-version: latest
      - run:
          name: Adding NPM/Yarn dependencies
          command: sudo chmod +x ./bin/InstallDependencies.sh && sudo ./bin/InstallDependencies.sh
      - run:
          name: Testing Client Folder
          command: cd client && yarn jest
      - run:
          name: Client Build Attempt
          command: CI=false yarn --cwd ./client run build
      - codecov/upload:
          file: ./client/coverage/coverage-final.json

  build-remote-docker-image:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest -f Dockerfile.prod .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish-latest:
    executor: docker-publisher
    steps:
      - setup_remote_docker:
          version: 19.03.13
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_ACCESS_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest

  deploy-prod:
    executor:
      name: node/default
    steps:
      - checkout
      - run:
          name: Deploy to Production
          command: ssh -o StrictHostKeyChecking=no -v $DROPLET_USER@$DROPLET_IP "./deploy_project.sh"

workflows:
  build-and-test:
    jobs:
      - build-and-test
      - build-remote-docker-image:
          filters:
            branches:
              only:
                - master
          requires:
            - build-and-test
      - publish-latest:
          filters:
            branches:
              only:
                - master
          requires:
            - build-remote-docker-image
      - deploy-prod:
          filters:
            branches:
              only:
                - master
          requires:
            - publish-latest
