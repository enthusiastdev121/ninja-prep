server {
    listen 80;
    server_name ninjaprep.io www.ninjaprep.io;
    server_tokens off;

#  Configure this to let cerbot ping and renew/create certificates in this route
    location  /.well-known/acme-challenge/ {
        allow all;
        root /usr/share/nginx/html;
    }

    location /api/ {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
      proxy_pass http://npserver:8080/api/;
      proxy_ssl_session_reuse off;
      proxy_set_header Host $http_host;
      proxy_cache_bypass $http_upgrade;
      proxy_redirect off;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server { 
 listen 443 ssl;
 server_name ninjaprep.io www.ninjaprep.io;
 server_tokens off;

 ssl_certificate /etc/letsencrypt/live/ninjaprep.io/fullchain.pem;
 ssl_certificate_key /etc/letsencrypt/live/ninjaprep.io/privkey.pem;
 include /etc/letsencrypt/options-ssl-nginx.conf;
 ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

 location / {
   # This would be the directory where your React app's static files are stored at
   root /usr/share/nginx/html;
   try_files $uri /index.html;
 }

  location /api/ {
   proxy_set_header X-Real-IP $remote_addr;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header X-NginX-Proxy true;
   proxy_pass http://npserver:8080/api/;
   proxy_ssl_session_reuse off;
   proxy_set_header Host $http_host;
   proxy_cache_bypass $http_upgrade;
   proxy_redirect off;
 }

  location /compile/ {
   proxy_set_header X-Real-IP $remote_addr;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header X-NginX-Proxy true;
   proxy_pass http://npbox:8000/compile/;
   proxy_ssl_session_reuse off;
   proxy_set_header Host $http_host;
   proxy_cache_bypass $http_upgrade;
   proxy_redirect off;
 }
}