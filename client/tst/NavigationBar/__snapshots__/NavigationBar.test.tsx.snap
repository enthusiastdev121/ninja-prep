// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapshot on "DESKTOP" 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <NavigationBar>
        <Responsiveness
          desktop={<UNDEFINED />}
          mobile={<NavigationBarMobile />}
        >
          <Desktop>
            <Memo(NavigationBarDesktop)>
              <Styled(Navbar)
                expand="lg"
                fixed="top"
                variant="dark"
              >
                <Navbar
                  className="sc-gtsrHT dSKHVb"
                  collapseOnSelect={false}
                  expand="lg"
                  fixed="top"
                  variant="dark"
                >
                  <nav
                    className="sc-gtsrHT dSKHVb navbar navbar-expand-lg navbar-dark fixed-top"
                  >
                    <styled.div>
                      <div
                        className="sc-dlnjwi bYEfmP"
                      >
                        <styled.div>
                          <div
                            className="sc-hKFxyN dIIkaJ"
                          >
                            <NavbarBrand
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "displayName": "Link",
                                  "propTypes": Object {
                                    "innerRef": [Function],
                                    "onClick": [Function],
                                    "replace": [Function],
                                    "target": [Function],
                                    "to": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              to="/"
                            >
                              <Link
                                className="navbar-brand"
                                to="/"
                              >
                                <LinkAnchor
                                  className="navbar-brand"
                                  href="/"
                                  navigate={[Function]}
                                >
                                  <a
                                    className="navbar-brand"
                                    href="/"
                                    onClick={[Function]}
                                  >
                                    <LightNinjaPrepLogo
                                      height={40}
                                      width={100}
                                    >
                                      <svg
                                        height={40}
                                        viewBox="0 0 200 57"
                                        width={100}
                                      >
                                        <g
                                          data-name="Group 120"
                                          id="Group_120"
                                          transform="translate(-1157 -10208)"
                                        >
                                          <text
                                            fill="#f9fbfd"
                                            fontFamily="SourceSansPro-Bold, Source Sans Pro"
                                            fontSize="40"
                                            fontWeight="700"
                                            id="NinjaPrep"
                                            transform="translate(1157 10249)"
                                          >
                                            <tspan
                                              x="0"
                                              y="0"
                                            >
                                              NinjaPrep
                                            </tspan>
                                          </text>
                                          <circle
                                            cx="7.5"
                                            cy="7.5"
                                            data-name="Ellipse 44"
                                            fill="#25d0f3"
                                            id="Ellipse_44"
                                            r="7.5"
                                            transform="translate(1342 10237)"
                                          />
                                        </g>
                                      </svg>
                                    </LightNinjaPrepLogo>
                                  </a>
                                </LinkAnchor>
                              </Link>
                            </NavbarBrand>
                          </div>
                        </styled.div>
                      </div>
                    </styled.div>
                    <NavbarToggle
                      label="Toggle navigation"
                    >
                      <button
                        aria-label="Toggle navigation"
                        className="navbar-toggler collapsed"
                        onClick={[Function]}
                        type="button"
                      >
                        <span
                          className="navbar-toggler-icon"
                        />
                      </button>
                    </NavbarToggle>
                    <styled.div>
                      <div
                        className="sc-bdnxRM eaWVJw"
                      >
                        <styled.div>
                          <div
                            className="sc-eCApnc fylMYb"
                          >
                            <Connect(NavigationBarContentContainer)>
                              <NavigationBarContentContainer
                                isLoadingUser={false}
                                toggleLoginModal={[Function]}
                              >
                                <NavigationBarContent
                                  isLoadingUser={false}
                                >
                                  <FadeIn>
                                    <div>
                                      <div
                                        key=".0"
                                        style={
                                          Object {
                                            "opacity": 0,
                                            "transform": "translateY(20px)",
                                            "transition": "opacity 400ms, transform 400ms",
                                          }
                                        }
                                      >
                                        <NavbarCollapse>
                                          <ForwardRef
                                            appear={false}
                                            getDimensionValue={[Function]}
                                            in={false}
                                            mountOnEnter={false}
                                            timeout={300}
                                            unmountOnExit={false}
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              aria-expanded={null}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={300}
                                              unmountOnExit={false}
                                            >
                                              <div
                                                aria-expanded={null}
                                                className="navbar-collapse collapse"
                                              >
                                                <Nav
                                                  fill={false}
                                                  justify={false}
                                                >
                                                  <ForwardRef
                                                    as="div"
                                                    className="navbar-nav"
                                                    onSelect={[Function]}
                                                  >
                                                    <div
                                                      className="navbar-nav"
                                                      onKeyDown={[Function]}
                                                    >
                                                      <Connect(NavigationLinksContainer)>
                                                        <NavigationLinksContainer
                                                          dispatch={[Function]}
                                                          isPremiumUser={false}
                                                        >
                                                          <Responsiveness
                                                            desktop={
                                                              <NavLinks
                                                                isPremiumUser={false}
                                                              />
                                                            }
                                                            mobile={
                                                              <NavLinksMobile
                                                                isPremiumUser={false}
                                                              />
                                                            }
                                                          >
                                                            <Desktop>
                                                              <NavLinks
                                                                isPremiumUser={false}
                                                              >
                                                                <styled.a
                                                                  as={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  to="/premium"
                                                                >
                                                                  <Link
                                                                    className="sc-pNWdM cMncoW"
                                                                    to="/premium"
                                                                  >
                                                                    <LinkAnchor
                                                                      className="sc-pNWdM cMncoW"
                                                                      href="/premium"
                                                                      navigate={[Function]}
                                                                    >
                                                                      <a
                                                                        className="sc-pNWdM cMncoW"
                                                                        href="/premium"
                                                                        onClick={[Function]}
                                                                      >
                                                                        Get Premium
                                                                      </a>
                                                                    </LinkAnchor>
                                                                  </Link>
                                                                </styled.a>
                                                                <styled.a
                                                                  as={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  to="/challenges"
                                                                >
                                                                  <Link
                                                                    className="sc-pNWdM cMncoW"
                                                                    to="/challenges"
                                                                  >
                                                                    <LinkAnchor
                                                                      className="sc-pNWdM cMncoW"
                                                                      href="/challenges"
                                                                      navigate={[Function]}
                                                                    >
                                                                      <a
                                                                        className="sc-pNWdM cMncoW"
                                                                        href="/challenges"
                                                                        onClick={[Function]}
                                                                      >
                                                                        Challenges
                                                                      </a>
                                                                    </LinkAnchor>
                                                                  </Link>
                                                                </styled.a>
                                                                <styled.a
                                                                  as={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "displayName": "Link",
                                                                      "propTypes": Object {
                                                                        "innerRef": [Function],
                                                                        "onClick": [Function],
                                                                        "replace": [Function],
                                                                        "target": [Function],
                                                                        "to": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  to="/about"
                                                                >
                                                                  <Link
                                                                    className="sc-pNWdM cMncoW"
                                                                    to="/about"
                                                                  >
                                                                    <LinkAnchor
                                                                      className="sc-pNWdM cMncoW"
                                                                      href="/about"
                                                                      navigate={[Function]}
                                                                    >
                                                                      <a
                                                                        className="sc-pNWdM cMncoW"
                                                                        href="/about"
                                                                        onClick={[Function]}
                                                                      >
                                                                        Meet the Team
                                                                      </a>
                                                                    </LinkAnchor>
                                                                  </Link>
                                                                </styled.a>
                                                              </NavLinks>
                                                            </Desktop>
                                                            <Mobile />
                                                          </Responsiveness>
                                                        </NavigationLinksContainer>
                                                      </Connect(NavigationLinksContainer)>
                                                      <Connect(NavigationBarDropdownMenu)>
                                                        <NavigationBarDropdownMenu
                                                          authUser={null}
                                                          isPremiumUser={false}
                                                          showLoginModal={false}
                                                          toggleLoginModal={[Function]}
                                                        >
                                                          <ProfileDropdown
                                                            authUser={null}
                                                            isPremium={false}
                                                            toggleLoginModal={[Function]}
                                                          >
                                                            <Styled(NavLink)
                                                              as={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "displayName": "Link",
                                                                  "propTypes": Object {
                                                                    "innerRef": [Function],
                                                                    "onClick": [Function],
                                                                    "replace": [Function],
                                                                    "target": [Function],
                                                                    "to": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              onClick={[Function]}
                                                              to="#"
                                                            >
                                                              <Link
                                                                className="sc-fnVZcZ fcvQtP"
                                                                onClick={[Function]}
                                                                to="#"
                                                              >
                                                                <LinkAnchor
                                                                  className="sc-fnVZcZ fcvQtP"
                                                                  href="/"
                                                                  navigate={[Function]}
                                                                  onClick={[Function]}
                                                                >
                                                                  <a
                                                                    className="sc-fnVZcZ fcvQtP"
                                                                    href="/"
                                                                    onClick={[Function]}
                                                                  >
                                                                    Sign Up
                                                                  </a>
                                                                </LinkAnchor>
                                                              </Link>
                                                            </Styled(NavLink)>
                                                          </ProfileDropdown>
                                                        </NavigationBarDropdownMenu>
                                                      </Connect(NavigationBarDropdownMenu)>
                                                    </div>
                                                  </ForwardRef>
                                                </Nav>
                                              </div>
                                            </Transition>
                                          </ForwardRef>
                                        </NavbarCollapse>
                                      </div>
                                    </div>
                                  </FadeIn>
                                </NavigationBarContent>
                              </NavigationBarContentContainer>
                            </Connect(NavigationBarContentContainer)>
                          </div>
                        </styled.div>
                      </div>
                    </styled.div>
                    <Connect(LoginModalContainer)>
                      <LoginModalContainer
                        showLoginModal={false}
                        toggleLoginModal={[Function]}
                      >
                        <LoginModal
                          showModal={false}
                          toggleModal={[Function]}
                        >
                          <Modal
                            animation={true}
                            autoFocus={true}
                            backdrop={true}
                            centered={true}
                            dialogAs={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "ModalDialog",
                                "render": [Function],
                              }
                            }
                            enforceFocus={true}
                            keyboard={true}
                            onHide={[Function]}
                            restoreFocus={true}
                            show={false}
                          >
                            <Modal
                              autoFocus={true}
                              backdrop={true}
                              backdropTransition={[Function]}
                              containerClassName="modal-open"
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                BootstrapModalManager {
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "modals": Array [],
                                  "scrollbarSize": 0,
                                }
                              }
                              onEnter={[Function]}
                              onEntering={[Function]}
                              onEscapeKeyDown={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              renderDialog={[Function]}
                              restoreFocus={true}
                              show={false}
                              transition={[Function]}
                            />
                          </Modal>
                        </LoginModal>
                      </LoginModalContainer>
                    </Connect(LoginModalContainer)>
                  </nav>
                </Navbar>
              </Styled(Navbar)>
            </Memo(NavigationBarDesktop)>
          </Desktop>
          <Mobile />
        </Responsiveness>
      </NavigationBar>
    </Provider>
  </Router>
</Provider>
`;

exports[`matches snapshot on "MOBILE" 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <NavigationBar>
        <Responsiveness
          desktop={<UNDEFINED />}
          mobile={<NavigationBarMobile />}
        >
          <Desktop />
          <Mobile>
            <NavigationBarMobile>
              <Styled(Navbar)
                expand="lg"
                fixed="top"
                variant="dark"
              >
                <Navbar
                  className="sc-gtsrHT dSKHVb"
                  collapseOnSelect={false}
                  expand="lg"
                  fixed="top"
                  variant="dark"
                >
                  <nav
                    className="sc-gtsrHT dSKHVb navbar navbar-expand-lg navbar-dark fixed-top"
                  >
                    <NavbarBrand
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "Link",
                          "propTypes": Object {
                            "innerRef": [Function],
                            "onClick": [Function],
                            "replace": [Function],
                            "target": [Function],
                            "to": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      to="/"
                    >
                      <Link
                        className="navbar-brand"
                        to="/"
                      >
                        <LinkAnchor
                          className="navbar-brand"
                          href="/"
                          navigate={[Function]}
                        >
                          <a
                            className="navbar-brand"
                            href="/"
                            onClick={[Function]}
                          >
                            <LightNinjaPrepLogo
                              height={40}
                              width={100}
                            >
                              <svg
                                height={40}
                                viewBox="0 0 200 57"
                                width={100}
                              >
                                <g
                                  data-name="Group 120"
                                  id="Group_120"
                                  transform="translate(-1157 -10208)"
                                >
                                  <text
                                    fill="#f9fbfd"
                                    fontFamily="SourceSansPro-Bold, Source Sans Pro"
                                    fontSize="40"
                                    fontWeight="700"
                                    id="NinjaPrep"
                                    transform="translate(1157 10249)"
                                  >
                                    <tspan
                                      x="0"
                                      y="0"
                                    >
                                      NinjaPrep
                                    </tspan>
                                  </text>
                                  <circle
                                    cx="7.5"
                                    cy="7.5"
                                    data-name="Ellipse 44"
                                    fill="#25d0f3"
                                    id="Ellipse_44"
                                    r="7.5"
                                    transform="translate(1342 10237)"
                                  />
                                </g>
                              </svg>
                            </LightNinjaPrepLogo>
                          </a>
                        </LinkAnchor>
                      </Link>
                    </NavbarBrand>
                    <NavbarToggle
                      label="Toggle navigation"
                    >
                      <button
                        aria-label="Toggle navigation"
                        className="navbar-toggler collapsed"
                        onClick={[Function]}
                        type="button"
                      >
                        <span
                          className="navbar-toggler-icon"
                        />
                      </button>
                    </NavbarToggle>
                    <NavbarCollapse>
                      <ForwardRef
                        appear={false}
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="navbar-collapse collapse"
                          >
                            <Nav
                              fill={false}
                              justify={false}
                            >
                              <ForwardRef
                                as="div"
                                className="navbar-nav"
                                onSelect={[Function]}
                              >
                                <div
                                  className="navbar-nav"
                                  onKeyDown={[Function]}
                                >
                                  <Connect(NavigationLinksContainer)>
                                    <NavigationLinksContainer
                                      dispatch={[Function]}
                                      isPremiumUser={false}
                                    >
                                      <Responsiveness
                                        desktop={
                                          <NavLinks
                                            isPremiumUser={false}
                                          />
                                        }
                                        mobile={
                                          <NavLinksMobile
                                            isPremiumUser={false}
                                          />
                                        }
                                      >
                                        <Desktop />
                                        <Mobile>
                                          <NavLinksMobile
                                            isPremiumUser={false}
                                          >
                                            <styled.a
                                              as={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              to="/premium"
                                            >
                                              <Link
                                                className="sc-jrsJWt gnVKoT"
                                                to="/premium"
                                              >
                                                <LinkAnchor
                                                  className="sc-jrsJWt gnVKoT"
                                                  href="/premium"
                                                  navigate={[Function]}
                                                >
                                                  <a
                                                    className="sc-jrsJWt gnVKoT"
                                                    href="/premium"
                                                    onClick={[Function]}
                                                  >
                                                    Get Premium
                                                  </a>
                                                </LinkAnchor>
                                              </Link>
                                            </styled.a>
                                            <styled.a
                                              as={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              to="/challenges"
                                            >
                                              <Link
                                                className="sc-jrsJWt gnVKoT"
                                                to="/challenges"
                                              >
                                                <LinkAnchor
                                                  className="sc-jrsJWt gnVKoT"
                                                  href="/challenges"
                                                  navigate={[Function]}
                                                >
                                                  <a
                                                    className="sc-jrsJWt gnVKoT"
                                                    href="/challenges"
                                                    onClick={[Function]}
                                                  >
                                                    Challenges
                                                  </a>
                                                </LinkAnchor>
                                              </Link>
                                            </styled.a>
                                            <styled.a
                                              as={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              to="/about"
                                            >
                                              <Link
                                                className="sc-jrsJWt gnVKoT"
                                                to="/about"
                                              >
                                                <LinkAnchor
                                                  className="sc-jrsJWt gnVKoT"
                                                  href="/about"
                                                  navigate={[Function]}
                                                >
                                                  <a
                                                    className="sc-jrsJWt gnVKoT"
                                                    href="/about"
                                                    onClick={[Function]}
                                                  >
                                                    Meet the Team
                                                  </a>
                                                </LinkAnchor>
                                              </Link>
                                            </styled.a>
                                          </NavLinksMobile>
                                        </Mobile>
                                      </Responsiveness>
                                    </NavigationLinksContainer>
                                  </Connect(NavigationLinksContainer)>
                                  <styled.div>
                                    <div
                                      className="sc-jSFjdj eSJROp"
                                    >
                                      <Connect(NavigationBarDropdownMenu)>
                                        <NavigationBarDropdownMenu
                                          authUser={null}
                                          isPremiumUser={false}
                                          showLoginModal={false}
                                          toggleLoginModal={[Function]}
                                        >
                                          <ProfileDropdown
                                            authUser={null}
                                            isPremium={false}
                                            toggleLoginModal={[Function]}
                                          >
                                            <Styled(NavLink)
                                              as={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              onClick={[Function]}
                                              to="#"
                                            >
                                              <Link
                                                className="sc-fnVZcZ fcvQtP"
                                                onClick={[Function]}
                                                to="#"
                                              >
                                                <LinkAnchor
                                                  className="sc-fnVZcZ fcvQtP"
                                                  href="/"
                                                  navigate={[Function]}
                                                  onClick={[Function]}
                                                >
                                                  <a
                                                    className="sc-fnVZcZ fcvQtP"
                                                    href="/"
                                                    onClick={[Function]}
                                                  >
                                                    Sign Up
                                                  </a>
                                                </LinkAnchor>
                                              </Link>
                                            </Styled(NavLink)>
                                          </ProfileDropdown>
                                        </NavigationBarDropdownMenu>
                                      </Connect(NavigationBarDropdownMenu)>
                                    </div>
                                  </styled.div>
                                </div>
                              </ForwardRef>
                            </Nav>
                            <Connect(LoginModalContainer)>
                              <LoginModalContainer
                                showLoginModal={false}
                                toggleLoginModal={[Function]}
                              >
                                <LoginModal
                                  showModal={false}
                                  toggleModal={[Function]}
                                >
                                  <Modal
                                    animation={true}
                                    autoFocus={true}
                                    backdrop={true}
                                    centered={true}
                                    dialogAs={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "ModalDialog",
                                        "render": [Function],
                                      }
                                    }
                                    enforceFocus={true}
                                    keyboard={true}
                                    onHide={[Function]}
                                    restoreFocus={true}
                                    show={false}
                                  >
                                    <Modal
                                      autoFocus={true}
                                      backdrop={true}
                                      backdropTransition={[Function]}
                                      containerClassName="modal-open"
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        BootstrapModalManager {
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "modals": Array [],
                                          "scrollbarSize": 0,
                                        }
                                      }
                                      onEnter={[Function]}
                                      onEntering={[Function]}
                                      onEscapeKeyDown={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      renderDialog={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                      transition={[Function]}
                                    />
                                  </Modal>
                                </LoginModal>
                              </LoginModalContainer>
                            </Connect(LoginModalContainer)>
                          </div>
                        </Transition>
                      </ForwardRef>
                    </NavbarCollapse>
                  </nav>
                </Navbar>
              </Styled(Navbar)>
            </NavigationBarMobile>
          </Mobile>
        </Responsiveness>
      </NavigationBar>
    </Provider>
  </Router>
</Provider>
`;

exports[`matches snapshot on "TABLET" 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <NavigationBar>
        <Responsiveness
          desktop={<UNDEFINED />}
          mobile={<NavigationBarMobile />}
        >
          <Desktop />
          <Mobile>
            <NavigationBarMobile>
              <Styled(Navbar)
                expand="lg"
                fixed="top"
                variant="dark"
              >
                <Navbar
                  className="sc-gtsrHT dSKHVb"
                  collapseOnSelect={false}
                  expand="lg"
                  fixed="top"
                  variant="dark"
                >
                  <nav
                    className="sc-gtsrHT dSKHVb navbar navbar-expand-lg navbar-dark fixed-top"
                  >
                    <NavbarBrand
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "Link",
                          "propTypes": Object {
                            "innerRef": [Function],
                            "onClick": [Function],
                            "replace": [Function],
                            "target": [Function],
                            "to": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      to="/"
                    >
                      <Link
                        className="navbar-brand"
                        to="/"
                      >
                        <LinkAnchor
                          className="navbar-brand"
                          href="/"
                          navigate={[Function]}
                        >
                          <a
                            className="navbar-brand"
                            href="/"
                            onClick={[Function]}
                          >
                            <LightNinjaPrepLogo
                              height={40}
                              width={100}
                            >
                              <svg
                                height={40}
                                viewBox="0 0 200 57"
                                width={100}
                              >
                                <g
                                  data-name="Group 120"
                                  id="Group_120"
                                  transform="translate(-1157 -10208)"
                                >
                                  <text
                                    fill="#f9fbfd"
                                    fontFamily="SourceSansPro-Bold, Source Sans Pro"
                                    fontSize="40"
                                    fontWeight="700"
                                    id="NinjaPrep"
                                    transform="translate(1157 10249)"
                                  >
                                    <tspan
                                      x="0"
                                      y="0"
                                    >
                                      NinjaPrep
                                    </tspan>
                                  </text>
                                  <circle
                                    cx="7.5"
                                    cy="7.5"
                                    data-name="Ellipse 44"
                                    fill="#25d0f3"
                                    id="Ellipse_44"
                                    r="7.5"
                                    transform="translate(1342 10237)"
                                  />
                                </g>
                              </svg>
                            </LightNinjaPrepLogo>
                          </a>
                        </LinkAnchor>
                      </Link>
                    </NavbarBrand>
                    <NavbarToggle
                      label="Toggle navigation"
                    >
                      <button
                        aria-label="Toggle navigation"
                        className="navbar-toggler collapsed"
                        onClick={[Function]}
                        type="button"
                      >
                        <span
                          className="navbar-toggler-icon"
                        />
                      </button>
                    </NavbarToggle>
                    <NavbarCollapse>
                      <ForwardRef
                        appear={false}
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="navbar-collapse collapse"
                          >
                            <Nav
                              fill={false}
                              justify={false}
                            >
                              <ForwardRef
                                as="div"
                                className="navbar-nav"
                                onSelect={[Function]}
                              >
                                <div
                                  className="navbar-nav"
                                  onKeyDown={[Function]}
                                >
                                  <Connect(NavigationLinksContainer)>
                                    <NavigationLinksContainer
                                      dispatch={[Function]}
                                      isPremiumUser={false}
                                    >
                                      <Responsiveness
                                        desktop={
                                          <NavLinks
                                            isPremiumUser={false}
                                          />
                                        }
                                        mobile={
                                          <NavLinksMobile
                                            isPremiumUser={false}
                                          />
                                        }
                                      >
                                        <Desktop />
                                        <Mobile>
                                          <NavLinksMobile
                                            isPremiumUser={false}
                                          >
                                            <styled.a
                                              as={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              to="/premium"
                                            >
                                              <Link
                                                className="sc-jrsJWt gnVKoT"
                                                to="/premium"
                                              >
                                                <LinkAnchor
                                                  className="sc-jrsJWt gnVKoT"
                                                  href="/premium"
                                                  navigate={[Function]}
                                                >
                                                  <a
                                                    className="sc-jrsJWt gnVKoT"
                                                    href="/premium"
                                                    onClick={[Function]}
                                                  >
                                                    Get Premium
                                                  </a>
                                                </LinkAnchor>
                                              </Link>
                                            </styled.a>
                                            <styled.a
                                              as={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              to="/challenges"
                                            >
                                              <Link
                                                className="sc-jrsJWt gnVKoT"
                                                to="/challenges"
                                              >
                                                <LinkAnchor
                                                  className="sc-jrsJWt gnVKoT"
                                                  href="/challenges"
                                                  navigate={[Function]}
                                                >
                                                  <a
                                                    className="sc-jrsJWt gnVKoT"
                                                    href="/challenges"
                                                    onClick={[Function]}
                                                  >
                                                    Challenges
                                                  </a>
                                                </LinkAnchor>
                                              </Link>
                                            </styled.a>
                                            <styled.a
                                              as={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              to="/about"
                                            >
                                              <Link
                                                className="sc-jrsJWt gnVKoT"
                                                to="/about"
                                              >
                                                <LinkAnchor
                                                  className="sc-jrsJWt gnVKoT"
                                                  href="/about"
                                                  navigate={[Function]}
                                                >
                                                  <a
                                                    className="sc-jrsJWt gnVKoT"
                                                    href="/about"
                                                    onClick={[Function]}
                                                  >
                                                    Meet the Team
                                                  </a>
                                                </LinkAnchor>
                                              </Link>
                                            </styled.a>
                                          </NavLinksMobile>
                                        </Mobile>
                                      </Responsiveness>
                                    </NavigationLinksContainer>
                                  </Connect(NavigationLinksContainer)>
                                  <styled.div>
                                    <div
                                      className="sc-jSFjdj eSJROp"
                                    >
                                      <Connect(NavigationBarDropdownMenu)>
                                        <NavigationBarDropdownMenu
                                          authUser={null}
                                          isPremiumUser={false}
                                          showLoginModal={false}
                                          toggleLoginModal={[Function]}
                                        >
                                          <ProfileDropdown
                                            authUser={null}
                                            isPremium={false}
                                            toggleLoginModal={[Function]}
                                          >
                                            <Styled(NavLink)
                                              as={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              onClick={[Function]}
                                              to="#"
                                            >
                                              <Link
                                                className="sc-fnVZcZ fcvQtP"
                                                onClick={[Function]}
                                                to="#"
                                              >
                                                <LinkAnchor
                                                  className="sc-fnVZcZ fcvQtP"
                                                  href="/"
                                                  navigate={[Function]}
                                                  onClick={[Function]}
                                                >
                                                  <a
                                                    className="sc-fnVZcZ fcvQtP"
                                                    href="/"
                                                    onClick={[Function]}
                                                  >
                                                    Sign Up
                                                  </a>
                                                </LinkAnchor>
                                              </Link>
                                            </Styled(NavLink)>
                                          </ProfileDropdown>
                                        </NavigationBarDropdownMenu>
                                      </Connect(NavigationBarDropdownMenu)>
                                    </div>
                                  </styled.div>
                                </div>
                              </ForwardRef>
                            </Nav>
                            <Connect(LoginModalContainer)>
                              <LoginModalContainer
                                showLoginModal={false}
                                toggleLoginModal={[Function]}
                              >
                                <LoginModal
                                  showModal={false}
                                  toggleModal={[Function]}
                                >
                                  <Modal
                                    animation={true}
                                    autoFocus={true}
                                    backdrop={true}
                                    centered={true}
                                    dialogAs={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "ModalDialog",
                                        "render": [Function],
                                      }
                                    }
                                    enforceFocus={true}
                                    keyboard={true}
                                    onHide={[Function]}
                                    restoreFocus={true}
                                    show={false}
                                  >
                                    <Modal
                                      autoFocus={true}
                                      backdrop={true}
                                      backdropTransition={[Function]}
                                      containerClassName="modal-open"
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        BootstrapModalManager {
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "modals": Array [],
                                          "scrollbarSize": 0,
                                        }
                                      }
                                      onEnter={[Function]}
                                      onEntering={[Function]}
                                      onEscapeKeyDown={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      renderDialog={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                      transition={[Function]}
                                    />
                                  </Modal>
                                </LoginModal>
                              </LoginModalContainer>
                            </Connect(LoginModalContainer)>
                          </div>
                        </Transition>
                      </ForwardRef>
                    </NavbarCollapse>
                  </nav>
                </Navbar>
              </Styled(Navbar)>
            </NavigationBarMobile>
          </Mobile>
        </Responsiveness>
      </NavigationBar>
    </Provider>
  </Router>
</Provider>
`;
